#!/bin/bash

set -e

# summary of how this script can be called:
#		* <postinst> `configure' <most-recently-configured-version>
#		* <old-postinst> `abort-upgrade' <new version>
#		* <conflictor's-postinst> `abort-remove' `in-favour' <package>
#		  <new-version>
#		* <postinst> `abort-remove'
#		* <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#		  <failed-install-package> <version> `removing'
#		  <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

add_user_and_group()
{
	if ! getent group thingsplex >/dev/null
	then
		echo -n "Adding group thingsplex.."
		addgroup --quiet \
			--system \
			thingsplex 2>/dev/null || true
		echo "..done"
	fi

	if ! getent passwd tpflow >/dev/null
	then
		echo -n "Adding user tpflow.."
		adduser --quiet \
			--system \
			--ingroup thingsplex \
			--no-create-home \
			--disabled-password \
			tpflow 2>/dev/null || true
		echo "..done"
	fi

}

set_ownership()
{
	chown -R tpflow:thingsplex "/opt/thingsplex/tpflow"
}

migrate_fimpflows()
{

    if [ -d /opt/fimpui/flow_storage ]
    then
        DIR="/opt/thingsplex/tpflow/var/flow_storage"
        # look for empty dir
        if [ "$(ls -A $DIR)" ]; then
             echo "Skip FIMPUI migration flow dir is not Empty"
        else
            echo "$DIR is Empty, migrating flows from fimpui"
            cp /opt/fimpui/flow_storage/* /opt/thingsplex/tpflow/var/flow_storage
            cp /opt/fimpui/registry.db /opt/thingsplex/tpflow/var
            chown -R tpflow:thingsplex /opt/thingsplex/tpflow/var
            echo "Flow migrated"
        fi
        # rest of the logic
    fi

}

case "$1" in
	configure)
	    echo "Configuring.."
		add_user_and_group
		set_ownership
		migrate_fimpflows
        if [ ! -d /var/log/thingsplex ]
        then
            echo "Setting up logging dir"
            mkdir -m 774 /var/log/thingsplex
            chown tpflow:thingsplex /var/log/thingsplex
        fi
		# Start thingsplex
		if [ -f /opt/thingsplex/tpflow/tpflow ]
		then
		    systemctl enable tpflow.service
			systemctl start tpflow.service
		fi
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac



# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0