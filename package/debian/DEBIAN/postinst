#!/bin/bash

set -e

# summary of how this script can be called:
#		* <postinst> `configure' <most-recently-configured-version>
#		* <old-postinst> `abort-upgrade' <new version>
#		* <conflictor's-postinst> `abort-remove' `in-favour' <package>
#		  <new-version>
#		* <postinst> `abort-remove'
#		* <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#		  <failed-install-package> <version> `removing'
#		  <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

add_user_and_group()
{
	if ! getent group thingsplex >/dev/null
	then
		echo -n "Adding group thingsplex.."
		addgroup --quiet \
			--system \
			thingsplex 2>/dev/null || true
		echo "..done"
	fi

    if ! getent group thingsplex >/dev/null
	then
		echo -n "Adding group thingsplex.."
		addgroup --quiet \
			--system \
			thingsplex 2>/dev/null || true
		echo "..done"
	fi

	if ! getent passwd thingsplex >/dev/null
	then
		echo -n "Adding user thingsplex.."
		adduser --quiet \
			--system \
			--ingroup thingsplex \
			--no-create-home \
			--disabled-password \
			thingsplex 2>/dev/null || true
		echo "..done"
	fi

    adduser --quiet thingsplex thingsplex

}

set_ownership()
{
	chown -R thingsplex:thingsplex "/opt/thingsplex"
}


case "$1" in
	configure)
		add_user_and_group
		set_ownership
        if [ ! -d /var/log/thingsplex ]
        then
            echo "Setting up logging dir"
            mkdir -m 744 /var/log/thingsplex
            chown thingsplex:thingsplex /var/log/thingsplex
        fi
		# Start thingsplex
		if [ -f /opt/thingsplex/tpflow/tpflow ]
		then
		    systemctl enable tpflow.service
			systemctl start tpflow.service
		fi
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0